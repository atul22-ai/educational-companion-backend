import { AsyncStack } from "../polyfill/AsyncStack";
type AnyFunction = (...args: any) => any;
type VariableDataBox<Value = any> = {
    value: Value;
};
export declare class AsyncVariable<Value = any> {
    data: WeakMap<AsyncStack, VariableDataBox<any>>;
    static stopWalkAt: WeakSet<AsyncStack>;
    static variableByStack: WeakMap<AsyncStack, Set<AsyncVariable<any>>>;
    static registerVariable(variable: AsyncVariable, stack: AsyncStack): void;
    getBox(stack: AsyncStack): VariableDataBox<Value> | undefined;
    setBox(stack: AsyncStack, box: {
        value: Value;
    }): void;
    set(stack: AsyncStack, data: any): void;
    get(): Value;
    run<Fn extends AnyFunction>(data: Value, callback: Fn): any;
    wrap<Fn extends AnyFunction>(data: Value, callback: Fn): Fn;
}
export {};
